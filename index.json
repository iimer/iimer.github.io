[{"categories":["tools"],"content":"hugo的搭建、部署、主题切换和日常运用。","date":"2023-03-15","objectID":"/posts/hugo%E7%9A%84%E4%BD%BF%E7%94%A8/","tags":["tools","hugo"],"title":"hugo的使用","uri":"/posts/hugo%E7%9A%84%E4%BD%BF%E7%94%A8/"},{"categories":["tools"],"content":"环境准备 (hugo中文网) hugo git ","date":"2023-03-15","objectID":"/posts/hugo%E7%9A%84%E4%BD%BF%E7%94%A8/:1:0","tags":["tools","hugo"],"title":"hugo的使用","uri":"/posts/hugo%E7%9A%84%E4%BD%BF%E7%94%A8/"},{"categories":["tools"],"content":"新建项目 hugo new site [项目名称]\r进入项目根目录 # 本地启动\rhugo server\r","date":"2023-03-15","objectID":"/posts/hugo%E7%9A%84%E4%BD%BF%E7%94%A8/:2:0","tags":["tools","hugo"],"title":"hugo的使用","uri":"/posts/hugo%E7%9A%84%E4%BD%BF%E7%94%A8/"},{"categories":["tools"],"content":"新建文件 进入项目根目录 hugo new [文件名]\r新文件默认为草稿，对应draft: true。可以修改模板文件。 要想启动时显示该文件，需要加上参数-D或者将draft的值改为false。 hugo server -D\r 在创建完第一个文件后，可以在此文件目录下直接创建别的文件，不需要每次都敲代码。 但必须保证开头的格式与第一个文件相同。 ","date":"2023-03-15","objectID":"/posts/hugo%E7%9A%84%E4%BD%BF%E7%94%A8/:3:0","tags":["tools","hugo"],"title":"hugo的使用","uri":"/posts/hugo%E7%9A%84%E4%BD%BF%E7%94%A8/"},{"categories":["tools"],"content":"引入主题 ","date":"2023-03-15","objectID":"/posts/hugo%E7%9A%84%E4%BD%BF%E7%94%A8/:4:0","tags":["tools","hugo"],"title":"hugo的使用","uri":"/posts/hugo%E7%9A%84%E4%BD%BF%E7%94%A8/"},{"categories":["tools"],"content":"基本套路 下载对应github的zip包，并解压到项目themes目录下。 修改根目录下config.toml文件，指定对应的主题，如LoveIt。 # 更改使用 Hugo 构建网站时使用的默认主题\r theme = \"LoveIt\"\r 其余按照主题特定的文档修改即可。 ","date":"2023-03-15","objectID":"/posts/hugo%E7%9A%84%E4%BD%BF%E7%94%A8/:4:1","tags":["tools","hugo"],"title":"hugo的使用","uri":"/posts/hugo%E7%9A%84%E4%BD%BF%E7%94%A8/"},{"categories":["tools"],"content":"LoveIt 主题文档 ","date":"2023-03-15","objectID":"/posts/hugo%E7%9A%84%E4%BD%BF%E7%94%A8/:4:2","tags":["tools","hugo"],"title":"hugo的使用","uri":"/posts/hugo%E7%9A%84%E4%BD%BF%E7%94%A8/"},{"categories":["tools"],"content":"部署发布 ","date":"2023-03-15","objectID":"/posts/hugo%E7%9A%84%E4%BD%BF%E7%94%A8/:5:0","tags":["tools","hugo"],"title":"hugo的使用","uri":"/posts/hugo%E7%9A%84%E4%BD%BF%E7%94%A8/"},{"categories":["tools"],"content":"部署github 项目根目录下，生成public文件夹（页面的静态文件） hugo\r创建仓库，格式为：[github用户名].github.io，如下图： 将public文件夹提交到此仓库，为git基础操作，不再记录。 访问对应的地址，如：https://iimer.github.io/ ","date":"2023-03-15","objectID":"/posts/hugo%E7%9A%84%E4%BD%BF%E7%94%A8/:5:1","tags":["tools","hugo"],"title":"hugo的使用","uri":"/posts/hugo%E7%9A%84%E4%BD%BF%E7%94%A8/"},{"categories":["tools"],"content":"分离项目 一般我们记录博客是不会直接操作public里面的静态文件的，所以存储hugo项目才是最为重要的事情。 分离主要是public和源hugo项目： public关联部署的库 源hugo关联新库，并用.gitignore文件来隔离public文件夹。 在我们写完博客后，要将以上两个项目分别提交。 ","date":"2023-03-15","objectID":"/posts/hugo%E7%9A%84%E4%BD%BF%E7%94%A8/:6:0","tags":["tools","hugo"],"title":"hugo的使用","uri":"/posts/hugo%E7%9A%84%E4%BD%BF%E7%94%A8/"},{"categories":["tools"],"content":"图片资源 因为生成public文件的规则，图片路径为/-lib/images/[filename]/… 本地用的是typora，存的是相对路径，对应的是../../static/-lib/images/[filename]/… 在必要时需要把文件目录互换： /-lib/images\r\u003c-\u003e\r../../-static/lib/images\r 多加一个 ‘-’ ，是为了防止被覆盖 ","date":"2023-03-15","objectID":"/posts/hugo%E7%9A%84%E4%BD%BF%E7%94%A8/:7:0","tags":["tools","hugo"],"title":"hugo的使用","uri":"/posts/hugo%E7%9A%84%E4%BD%BF%E7%94%A8/"}]